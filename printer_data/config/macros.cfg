#=====================================================
# PID Hotend
#=====================================================
[gcode_macro PID_HOTEND]
description: Calibrate PID Hotend
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
    M106 S255
    PID_CALIBRATE HEATER=extruder TARGET=240

#=====================================================
# Input Shaper
#=====================================================
[gcode_macro SHAPE]
description:Input Shaper
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
    SHAPER_CALIBRATE

#=====================================================
# Probe Calibrate
#=====================================================
[gcode_macro PROBE_CALIBRATE]
description:Probe Calibrate
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
    PROBE_CALIBRATE

#=====================================================
# Save and restart
#=====================================================
#[gcode_macro SAVE_CONFIG]
#description:Save and restart firmware
#gcode:
#     SAVE_CONFIG
#=====================================================
# Speed Test
#=====================================================
[gcode_macro TEST_SPEED]
gcode:
    # Example: TEST_SPEED SPEED=300 ACCEL=4000 ITERATIONS=10
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(1)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(30)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}

    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}

    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}

        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED

    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }

    # Home and get position for comparison later:
    G28

    # Absolute positioning
    G90

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel}


    # Go to starting position
    G0 X{x_min} Y{y_min} Z{20} F{speed*60}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}

            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}

        # Small pattern
            # Small diagonals
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}

            # Small box
	    {% for i in range(10) %}
		    G0 X{x_center_min} Y{y_center_min} F{speed*60}
		    G0 X{x_center_min} Y{y_center_max} F{speed*60}
		    G0 X{x_center_max} Y{y_center_max} F{speed*60}
		    G0 X{x_center_max} Y{y_center_min} F{speed*60}
	    {% endfor %}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

##################################################################

    
[gcode_macro START_PRINT]
#default_parameter_EXTRUDERS_ENABLED_COUNT: 1
#default_parameter_MATERIAL_BED_TEMPERATURE: 65
#default_parameter_MATERIAL_PRINT_TEMPERATURE: 220
#configure the params below to tune the stage desired temperatures based on the standby temps
gcode:
    #M73 P0                       ; clear GLCD progress bar
    G21                          ; set to mm
    M107                         ; disable fans
    G90                          ; absolute positioning
    M83                          ; extruder to relative mode
    G92 E0                       ; set extruder to zero
    G28                          ; home
    G1 Z0.6 X0 Y2 F2000.0        ; move to 0,0
    M140 S{MATERIAL_BED_TEMPERATURE}                                                           ; wait for bed temp  
    M104 S{MATERIAL_PRINT_TEMPERATURE}                                                         ; set extruder
    M190 S{MATERIAL_BED_TEMPERATURE}                                                           ; wait for bed temp   
    M109 S{MATERIAL_PRINT_TEMPERATURE}                                                         ; wait for extruder temp
    G92 E0.0
    G1 Z0.2 X40 E20 F1000.0      ; intro line
    G92 E0.0
    M400                         ; clear buffer
    #M117 CARRIE Printing...      ; LCD status message
    
[gcode_macro END_PRINT]
gcode:
    M400                        ; clear buffer
    M104 S0                     ; turn off temperature
    M140 S0                     ; turn off heatbed
    M107                        ; turn off fan
    G91                         ; relative positioning
    G1 Z5                       ; move Z down 5mm
    G90                         ; absolute positioning
    G1 F1000.0                  ; set feed rate
    G1 E-3                      ; retract
    G1 X118 Y118 F3000          ; home X axis
    M221 S100                   ; Reset Filament Flowrate
    M84 XYE                      ; disable motors

###############################################################################

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  125
gcode:
    {% set speed = params.SPEED|default(350) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{speed} ; extrude with 7.5mm/s
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  75
gcode:
    {% set speed = params.SPEED|default(350) %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E-{unload_distance} F{speed} ; unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PURGE_FILAMENT]
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(350) %}
    SAVE_GCODE_STATE NAME=purge_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed}   ; purge
    RESTORE_GCODE_STATE NAME=purge_state

[gcode_macro LOAD_MATERIAL]
description: Manual filament loading / change
variable_initial_target_temp: 220
gcode:
    # save gcode state
    SAVE_GCODE_STATE NAME=load_material_state
    # save heating state
    SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL VARIABLE=initial_target_temp VALUE={printer["extruder"].target}

    _LOAD_MATERIAL_SELECT

[gcode_macro _LOAD_MATERIAL_SELECT]
gcode:
    {% if not printer["extruder"].target >= printer.configfile.settings['extruder'].min_extrude_temp %}
        # material selection
        RESPOND TYPE=command MSG="action:prompt_begin Material Selection"
        RESPOND TYPE=command MSG="action:prompt_text Select the material type to heat the nozzle."
        RESPOND TYPE=command MSG="action:prompt_button_group_start"
        RESPOND TYPE=command MSG="action:prompt_button PLA|_LOAD_MATERIAL_HEATUP TEMP=220|primary"
        RESPOND TYPE=command MSG="action:prompt_button PETG|_LOAD_MATERIAL_HEATUP TEMP=230|primary"
        RESPOND TYPE=command MSG="action:prompt_button ABS|_LOAD_MATERIAL_HEATUP TEMP=250|primary"
        RESPOND TYPE=command MSG="action:prompt_button_group_end"
        RESPOND TYPE=command MSG="action:prompt_footer_button Abort|_LOAD_MATERIAL_END"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
        # skip preheating dialog, but wait for target temp
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer["extruder"].target}
        _LOAD_MATERIAL_ACTION
    {% endif %}

[gcode_macro _LOAD_MATERIAL_HEATUP]
gcode:
    {% set extruder_temp = params.TEMP|default(220)|float %}
    M104 S{extruder_temp}
    RESPOND TYPE=command MSG=action:prompt_end
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
    _LOAD_MATERIAL_ACTION

[gcode_macro _LOAD_MATERIAL_ACTION]
gcode:
    # loading / unloading
    RESPOND TYPE=command MSG="action:prompt_begin Filament Loading"
    RESPOND TYPE=command MSG="action:prompt_text Select filament loading action."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Load|LOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Unload|UNLOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Purge|PURGE_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Done|_LOAD_MATERIAL_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _LOAD_MATERIAL_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    # restore old temp
    M104 S{printer["gcode_macro LOAD_MATERIAL"].initial_target_temp}
    # restore gcode state
    RESTORE_GCODE_STATE NAME=load_material_state

